[1mdiff --git a/utils/xybot.py b/utils/xybot.py[m
[1mindex af2a100..ac6e26e 100644[m
[1m--- a/utils/xybot.py[m
[1m+++ b/utils/xybot.py[m
[36m@@ -508,7 +508,7 @@[m [mclass XYBot:[m
 [m
     async def process_text_message(self, message: Dict[str, Any]):[m
         """处理文本消息"""[m
[31m-        message["Content"] = message.get("Content", {}).get("string", "")[m
[32m+[m[32m        message["Content"] = message.get("Content", {}).get("string", "").replace("\n", "\\n")#修复文本消息里面包含有回车的情况[m
 [m
         if message["FromWxid"].endswith("@chatroom"):  # 群聊消息[m
             message["IsGroup"] = True[m
[1mdiff --git a/wx849_callback_daemon.py b/wx849_callback_daemon.py[m
[1mindex c3af883..ea0cd81 100644[m
[1m--- a/wx849_callback_daemon.py[m
[1m+++ b/wx849_callback_daemon.py[m
[36m@@ -165,11 +165,15 @@[m [mclass MessageMonitor:[m
                     "收到语音消息" in line or[m
                     "收到被@消息" in line or  # 添加被@消息类型[m
                     "收到引用消息" in line or  # 添加引用消息类型[m
[31m-                    "MsgId" in line):[m
[32m+[m[32m                    "MsgId" in line or[m
[32m+[m[32m                    "收到链接分享消息" in line):[m
 [m
                     # 特别处理图片消息，确保它们被正确识别[m
                     if "收到图片消息" in line:[m
                         logger.info(f"发现图片消息行: {line[:100]}...")[m
[32m+[m[32m                    # 特别处理链接分享消息，确保它们被正确识别[m
[32m+[m[32m                    elif "收到链接分享消息" in line:[m
[32m+[m[32m                        logger.info(f"发现链接分享消息行: {line[:100]}...")[m
 [m
                     logger.info(f"发现可能的消息行: {line[:100]}...")[m
 [m
[36m@@ -505,6 +509,35 @@[m [mclass MessageMonitor:[m
                         msg_data["MsgSource"] = msg_source[m
 [m
                     return msg_data[m
[32m+[m[41m                [m
[32m+[m[32m                # 特殊处理被@消息[m
[32m+[m[32m            if "收到链接分享消息" in line:[m
[32m+[m[32m                logger.info(f"检测到收到链接分享消息: {line}")[m
[32m+[m[32m                url_pattern = re.compile(r'消息ID:(\d+).*?来自:(.*?)[\s\:].*?发送人:(.*?)[\s\:].*?XML:(.*?)(?=$|\n)')[m
[32m+[m[32m                url_match = url_pattern.search(line)[m
[32m+[m
[32m+[m[32m                if url_match:[m
[32m+[m[32m                    msg_id, from_user, sender, xml_content = url_match.groups()[m
[32m+[m[32m                    logger.info(f"成功解析链接分享消息: ID={msg_id}, 发送者={sender}, XML长度={len(xml_content)}")[m
[32m+[m
[32m+[m[32m                    # 创建分享消息数据[m
[32m+[m[32m                    msg_data = {[m
[32m+[m[32m                        "MsgId": int(msg_id),[m
[32m+[m[32m                        "FromUserName": {"string": from_user},[m
[32m+[m[32m                        "MsgType": 6,  # SHARING 分享信息[m
[32m+[m[32m                        "Content": xml_content,[m
[32m+[m[32m                        "FromWxid": from_user,[m
[32m+[m[32m                        "SenderWxid": sender,[m
[32m+[m[32m                        "RawLogLine": line,  # 保存原始行[m
[32m+[m[32m                    }[m
[32m+[m
[32m+[m[32m                    # 尝试从缓存添加发送者昵称[m
[32m+[m[32m                    if sender in user_nickname_cache:[m
[32m+[m[32m                        msg_data["SenderNickName"] = user_nickname_cache[sender][m
[32m+[m[32m                        logger.info(f"为分享消息添加发送者昵称: {sender} -> {user_nickname_cache[sender]}")[m
[32m+[m
[32m+[m[32m                    logger.info(f"成功从日志提取分享消息数据: ID={msg_id}, 发送者={sender}, 类型=6(分享信息)")[m
[32m+[m[32m                    return msg_data[m
 [m
             # 处理普通消息[m
             msg_pattern = re.compile(r'消息ID:(\d+).*?来自:(.*?)[\s\:].*?发送人:(.*?)[\s\:].*?内容:(.*?)(?=$|\n)')[m
